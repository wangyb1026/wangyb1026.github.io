<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wangyb1026.github.io</id>
    <title>咸鱼得水</title>
    <updated>2021-03-24T02:40:05.704Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wangyb1026.github.io"/>
    <link rel="self" href="https://wangyb1026.github.io/atom.xml"/>
    <subtitle>咸鱼得水，随性分享</subtitle>
    <logo>https://wangyb1026.github.io/images/avatar.png</logo>
    <icon>https://wangyb1026.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 咸鱼得水</rights>
    <entry>
        <title type="html"><![CDATA[Promise 同步还是异步？]]></title>
        <id>https://wangyb1026.github.io/post/promise-tong-bu-huan-shi-yi-bu/</id>
        <link href="https://wangyb1026.github.io/post/promise-tong-bu-huan-shi-yi-bu/">
        </link>
        <updated>2021-03-24T02:14:44.000Z</updated>
        <content type="html"><![CDATA[<p>Promise 其实是个同步的方法，在代码中会按照顺序执行。同时new Promise({})里面有任何方法，都会按顺序执行。并且不受resolve() 和 reject()执行而阻止后续代码执行。除非return resolve()或 return reject()，此时会阻止return后面的代码执行。<br>
Promise.then() 是个异步方法，在Promise跑完后会执行then中的callback。但是then内部的callback是同步的，里面的代码按顺序执行。</p>
<p>一段典型的例子：<br>
const promise = new Promise((resolve, reject) =&gt; {<br>
console.log(1);<br>
resolve(5);<br>
console.log(2);<br>
}).then(val =&gt; {<br>
console.log(val);<br>
});</p>
<p>promise.then(() =&gt; {<br>
console.log(3);<br>
});</p>
<p>console.log(4);</p>
<p>setTimeout(function() {<br>
console.log(6);<br>
});<br>
//  1 2 4 5 3 6</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ECMAScript 数据类型]]></title>
        <id>https://wangyb1026.github.io/post/ecmascript-shu-ju-lei-xing/</id>
        <link href="https://wangyb1026.github.io/post/ecmascript-shu-ju-lei-xing/">
        </link>
        <updated>2021-03-19T06:02:33.000Z</updated>
        <content type="html"><![CDATA[<p>最新的ECMAScript 标准定义了9种数据类型：<br>
· 原始类型：<br>
1. undefined;<br>
2. Boolean;<br>
3. Number;<br>
4. String;<br>
5. BigInt;<br>
6. Symbol;<br>
· null;<br>
· Object; (包括new Object，new Array，new Map，new Set，new WeakMap，new WeakSet，new Date，和几乎所有通过 new keyword 创建的东西。)<br>
· Function;</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[新的博客测试]]></title>
        <id>https://wangyb1026.github.io/post/xin-de-bo-ke-ce-shi/</id>
        <link href="https://wangyb1026.github.io/post/xin-de-bo-ke-ce-shi/">
        </link>
        <updated>2021-03-19T01:35:14.000Z</updated>
        <content type="html"><![CDATA[<p>哈哈哈，欢迎来到我的新博客！<br>
poweredby Gridea and Github Pages.<br>
记住链接：<a href="https://wangyb1026.github.io/post-images/1616117867563.jpg">https://jackwang.dev</a></p>
]]></content>
    </entry>
</feed>